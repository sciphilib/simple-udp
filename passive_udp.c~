#include "passive_udp.h"

static struct servent   *pse; // pointer to host information entry
static  struct protoent *ppe; // pointer to protocol information entry
static  struct sockaddr_in sin; // an Internet endpoint address

int passivesock(const char *service, const char *transport, int qlen);

int passiveUDP(const char *service) { return passivesock(service, "udp", 0); }

u_short portbase = 0;

int passivesock(const char *service, const char *trasport, int qlen) {

  int _socket, socket_type;

  memset(&sin, 0, sizeof(sin));
  sin.sin_family = AF_INET;
  sin.sin_addr.s_addr = INADDR_ANY;

  return _socket;
}

bool map_service_port(const char *service, const char *transport) {
  if ((pse = getservbyname(service, transport))) { 
    sin.sin_port = pse->s_port;
    return true;
  }
  else if ((sin.sin_port = htons((uint_16t)atoi(service)) != 0)) {
    
  }
  return false;
}
